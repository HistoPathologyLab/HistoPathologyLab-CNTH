<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Add Consultant/Registrar - Histopathology Lab System</title>
    <style>
        /* Your existing styles */
    </style>
</head>
<body>
    <div class="sidebar" id="sidebar">
        <!-- Your existing sidebar content -->
    </div>
    <div class="content" id="content">
        <div class="top-bar">
            <!-- Your existing top-bar content -->
        </div>
        <div class="main-content" id="main-content">
            <!-- Main content goes here -->
            <div class="form-container">
                <label for="doctor-name">Doctor's Name (Dr.):</label>
                <input type="text" id="doctor-name" name="doctor-name">
                <label for="profession">Profession:</label>
                <select id="profession" name="profession">
                    <option value="" selected disabled>Select Profession</option>
                    <option value="Registrar">Registrar</option>
                    <option value="Senior Registrar">Senior Registrar</option>
                    <option value="Consultant">Consultant</option>
                </select>
                <div class="button-container">
                    <button id="remove">Remove</button>
                    <button id="add">Add</button>
                </div>
            </div>
        </div>
    </div>

    <script>
        // Function to update time and date
        function updateTime() {
            const timeElement = document.getElementById('time');
            const dateElement = document.getElementById('date');
            const now = new Date();

            // Time options
            const timeOptions = {
                hour: '2-digit',
                minute: '2-digit',
                second: '2-digit'
            };

            // Date options
            const dateOptions = {
                weekday: 'long',
                year: 'numeric',
                month: 'long',
                day: 'numeric'
            };

            const formattedTime = now.toLocaleTimeString('en-US', timeOptions);
            const formattedDate = now.toLocaleDateString('en-US', dateOptions);

            timeElement.textContent = formattedTime;
            dateElement.textContent = formattedDate;
        }

        // Update time and date every second
        setInterval(updateTime, 1000);
        updateTime(); // Initial call to display immediately

        // Function to check if the user is logged in
        function checkSession() {
            const isLoggedIn = sessionStorage.getItem('isLoggedIn');
            if (!isLoggedIn) {
                window.location.href = 'index.html';
            }
        }

        // Unified window.onload function
        window.onload = function() {
            checkSession();
            document.getElementById('profession').selectedIndex = 0; // Select the placeholder option by default
        };

        // Log out functionality
        document.getElementById('logout').addEventListener('click', function() {
            sessionStorage.removeItem('isLoggedIn');
            window.location.href = 'index.html';
        });

        // Reload home.html when the Home item is clicked
        document.getElementById('home-link').addEventListener('click', function() {
            window.location.href = 'home.html';
        });

        // Toggle sidebar visibility for mobile
        const menuButton = document.getElementById('menu-button');
        const sidebar = document.getElementById('sidebar');

        menuButton.addEventListener('click', function() {
            sidebar.classList.toggle('visible');
        });

        // Close the sidebar when clicking outside of it
        document.addEventListener('click', function(event) {
            if (!sidebar.contains(event.target) && event.target !== menuButton) {
                sidebar.classList.remove('visible');
            }
        });

        // Function to save doctor's data
        async function saveDoctor(name, profession) {
            try {
                const response = await fetch('http://localhost:3000/api/saveDoctor', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ name, profession })
                });
                if (!response.ok) {
                    throw new Error('Failed to save doctor data.');
                }
                alert(`Doctor ${name} added as ${profession}.`);
                document.getElementById('doctor-name').value = '';
                document.getElementById('profession').selectedIndex = 0;
            } catch (error) {
                console.error('Error:', error);
                alert('Failed to save doctor data.');
            }
        }

        // Function to remove doctor's data
        async function removeDoctor(name, profession) {
            try {
                const response = await fetch('http://localhost:3000/api/removeDoctor', {
                    method: 'DELETE',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ name, profession })
                });
                if (!response.ok) {
                    throw new Error('Failed to remove doctor data.');
                }
                alert(`Doctor ${name} removed.`);
                document.getElementById('doctor-name').value = '';
                document.getElementById('profession').selectedIndex = 0;
            } catch (error) {
                console.error('Error:', error);
                alert('Failed to remove doctor data.');
            }
        }

        // Add button event listener
        document.getElementById('add').addEventListener('click', async function() {
            const name = document.getElementById('doctor-name').value.trim();
            const profession = document.getElementById('profession').value;

            if (name && profession) {
                await saveDoctor(name, profession);
            } else {
                alert('Please enter both the doctor\'s name and profession.');
            }
        });

        // Remove button event listener
        document.getElementById('remove').addEventListener('click', async function() {
            const name = document.getElementById('doctor-name').value.trim();
            const profession = document.getElementById('profession').value;

            if (name && profession) {
                await removeDoctor(name, profession);
            } else {
                alert('Please enter both the doctor\'s name and profession.');
            }
        });
    </script>
</body>
</html>
